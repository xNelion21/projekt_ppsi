"use strict";const e=require("./index-DiURjA3G.js"),u=require("vue");exports.useCountdown=(a,o,t={})=>{const s=u.readonly(u.toRef(a)),l=u.ref(!1),r=u.ref(Date.now()+s.value),{isActive:v,pause:n,resume:i,timestamp:c}=e.useTimestamp({interval:o,controls:!0,callback:e=>{e>=r.value&&(l.value=!1,n())},...t}),m=u.computed((()=>r.value-c.value)),d=()=>{r.value=Date.now()+s.value,i()};u.watch(s,(()=>{s.value>0&&d()}));return{isActive:u.readonly(v),isPaused:u.readonly(l),stop:()=>{n(),c.value=r.value,l.value=!1},pause:()=>{l.value=!0,n()},resume:()=>{l.value=!1;const e=r.value-c.value;r.value=Date.now()+e,i()},restart:d,value:m}},exports.useCountdownHover=(a,{modelValueIgnoresHover:o,noHoverPause:t,noResumeOnHoverLeave:s},l)=>{const r=e.useElementHover(a);return u.watch(r,(e=>{u.toValue(o)||(e?u.toValue(t)||l.pause():u.toValue(s)||l.resume())})),{isHovering:r}};
//# sourceMappingURL=useCountdownHover-B0MzavX8.js.map
