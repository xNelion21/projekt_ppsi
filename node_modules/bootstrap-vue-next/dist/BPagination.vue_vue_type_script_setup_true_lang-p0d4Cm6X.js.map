{"version":3,"file":"BPagination.vue_vue_type_script_setup_true_lang-p0d4Cm6X.js","sources":["../src/components/BPagination/BPagination.vue"],"sourcesContent":["<template>\n  <ul\n    class=\"pagination\"\n    :class=\"computedWrapperClasses\"\n    role=\"menubar\"\n    :aria-disabled=\"props.disabled\"\n    :aria-label=\"props.ariaLabel || undefined\"\n    @keydown=\"handleKeyNav\"\n  >\n    <li\n      v-for=\"(page, index) in pages\"\n      :key=\"`page-${page.id}`\"\n      v-bind=\"page.li\"\n      ref=\"_pageElements\"\n      :displayIndex=\"index\"\n    >\n      <span\n        v-if=\"page.id === FIRST_ELLIPSIS || page.id === LAST_ELLIPSIS\"\n        v-bind=\"ellipsisProps.span\"\n      >\n        <slot name=\"ellipsis-text\">\n          {{ props.ellipsisText || '...' }}\n        </slot>\n      </span>\n      <component v-bind=\"page.button\" :is=\"page.button.is\" v-else @click=\"page.clickHandler\">\n        <slot\n          :name=\"page.text.name\"\n          :disabled=\"page.text.disabled\"\n          :page=\"page.text.page\"\n          :index=\"page.text.index\"\n          :active=\"page.text.active\"\n          :content=\"page.text.value\"\n        >\n          {{ page.text.value }}\n        </slot>\n      </component>\n    </li>\n  </ul>\n</template>\n\n<script setup lang=\"ts\">\nimport {BvEvent} from '../../utils'\nimport {computed, nextTick, useTemplateRef, watch} from 'vue'\nimport type {BPaginationProps} from '../../types/ComponentProps'\nimport {useAlignment} from '../../composables/useAlignment'\nimport {useToNumber} from '@vueuse/core'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {ClassValue} from '../../types/AnyValuedAttributes'\nimport {CODE_DOWN, CODE_LEFT, CODE_RIGHT, CODE_UP} from '../../utils/constants'\nimport {stopEvent} from '../../utils/event'\nimport {getActiveElement} from '../../utils/dom'\n\n// Threshold of limit size when we start/stop showing ellipsis\nconst ELLIPSIS_THRESHOLD = 3\n\nconst FIRST_BUTTON = -1\nconst PREV_BUTTON = -2\nconst NEXT_BUTTON = -3\nconst LAST_BUTTON = -4\nconst FIRST_ELLIPSIS = -5\nconst LAST_ELLIPSIS = -6\n\n// This is necessary because type inference isn't succeeding for the pages computed\ninterface PageButton {\n  id: number\n  li: Record<string, unknown>\n  button: Record<string, unknown>\n  text: Record<string, unknown>\n  clickHandler: (e: Readonly<MouseEvent>) => void\n}\n\nconst _props = withDefaults(defineProps<Omit<BPaginationProps, 'modelValue'>>(), {\n  align: 'start',\n  ariaControls: undefined,\n  ariaLabel: 'Pagination',\n  disabled: false,\n  ellipsisClass: undefined,\n  ellipsisText: '\\u2026',\n  firstClass: undefined,\n  firstNumber: false,\n  firstText: '\\u00AB',\n  noEllipsis: false,\n  noGotoEndButtons: false,\n  labelFirstPage: 'Go to first page',\n  labelLastPage: 'Go to last page',\n  labelNextPage: 'Go to next page',\n  labelPage: 'Go to page',\n  labelPrevPage: 'Go to previous page',\n  lastClass: undefined,\n  lastNumber: false,\n  lastText: '\\u00BB',\n  limit: 5,\n  nextClass: undefined,\n  nextText: '\\u203A',\n  pageClass: undefined,\n  perPage: DEFAULT_PER_PAGE,\n  pills: false,\n  prevClass: undefined,\n  prevText: '\\u2039',\n  size: undefined,\n  totalRows: DEFAULT_TOTAL_ROWS,\n})\nconst props = useDefaults(_props, 'BPagination')\n\nconst emit = defineEmits<{\n  'page-click': [event: BvEvent, pageNumber: number]\n}>()\n\nconst modelValue = defineModel<Exclude<BPaginationProps['modelValue'], undefined>>({\n  default: 1,\n})\n\nconst pageElements = useTemplateRef<HTMLLIElement[]>('_pageElements')\n\nconst limitNumber = useToNumber(() => props.limit, {nanToZero: true, method: 'parseInt'})\nconst perPageNumber = useToNumber(() => props.perPage, {nanToZero: true, method: 'parseInt'})\nconst totalRowsNumber = useToNumber(() => props.totalRows, {nanToZero: true, method: 'parseInt'})\nconst modelValueNumber = useToNumber(modelValue, {nanToZero: true, method: 'parseInt'})\n\nconst perPageSanitized = computed(() => Math.max(perPageNumber.value || DEFAULT_PER_PAGE, 1))\nconst totalRowsSanitized = computed(() => Math.max(totalRowsNumber.value || DEFAULT_TOTAL_ROWS, 0))\n// Use Active to on page-item to denote active tab\nconst numberOfPages = computed(() => Math.ceil(totalRowsSanitized.value / perPageSanitized.value))\nconst computedFill = computed(() => props.align === 'fill')\n// This doesn't use the computedFill util because TS cannot infer that it would never be 'fill'\nconst justifyAlign = computed(() => (props.align === 'fill' ? 'start' : props.align))\n\nconst alignment = useAlignment(justifyAlign)\n\nconst isActivePage = (pageNumber: number) => pageNumber === computedModelValue.value\nconst getTabIndex = (num: number) => (props.disabled ? null : isActivePage(num) ? '0' : '-1')\n\nconst checkDisabled = (num: number) =>\n  props.disabled ||\n  isActivePage(num) ||\n  computedModelValue.value < 1 ||\n  // Check if the number is out of bounds\n  num < 1 ||\n  num > numberOfPages.value\n\nconst firstDisabled = computed(() => checkDisabled(1))\nconst prevDisabled = computed(() => checkDisabled(computedModelValue.value - 1))\nconst lastDisabled = computed(() => checkDisabled(numberOfPages.value))\nconst nextDisabled = computed(() => checkDisabled(computedModelValue.value + 1))\n\nconst getBaseButtonProps = ({\n  page,\n  classVal,\n  disabled,\n  slotName,\n  textValue,\n  tabIndex,\n  label,\n  position,\n  isActive,\n  hidden,\n  isSmHidden,\n}: {\n  page: number\n  disabled: boolean\n  classVal: ClassValue\n  slotName: string\n  textValue?: string\n  tabIndex?: string\n  label?: string\n  position?: number\n  isActive?: boolean\n  hidden?: boolean\n  isSmHidden?: boolean\n}) => ({\n  li: {\n    'class': [\n      'page-item',\n      {\n        'active': isActive,\n        disabled,\n        'bv-d-sm-down-none': isSmHidden,\n        'flex-fill': computedFill.value,\n        'd-flex': computedFill.value && !disabled,\n      },\n      classVal,\n    ],\n    'role': 'presentation',\n    'aria-hidden': hidden,\n  },\n  button: {\n    'is': disabled ? 'span' : 'button',\n    'class': ['page-link', 'text-center', {'flex-grow-1': !disabled && computedFill.value}],\n    'aria-label': label,\n    'aria-controls': props.ariaControls || undefined,\n    'aria-disabled': disabled ? true : undefined,\n    'aria-posinset': position,\n    'aria-setsize': position ? numberOfPages.value : undefined,\n    'role': 'menuitem',\n    'type': disabled ? undefined : 'button',\n    'tabindex': disabled ? undefined : tabIndex,\n  },\n  text: {\n    name: slotName,\n    active: isActive,\n    value: textValue ?? page,\n    page,\n    disabled,\n    index: page - 1,\n    content: textValue ? undefined : page,\n  },\n  clickHandler: (e: Readonly<MouseEvent>) => pageClick(e, page),\n})\n\nconst getButtonProps = ({\n  page,\n  classVal,\n  disabled,\n  slotName,\n  textValue,\n  label,\n}: {\n  page: number\n  disabled: boolean\n  classVal: ClassValue\n  slotName: string\n  textValue?: string\n  label: string\n}) => getBaseButtonProps({page, classVal, disabled, slotName, textValue, label, tabIndex: '-1'})\n\nconst getPageButtonProps = (page: number, isSmHidden?: boolean) =>\n  getBaseButtonProps({\n    page,\n    disabled: props.disabled,\n    classVal: props.pageClass,\n    slotName: 'page',\n    label: props.labelPage ? `${props.labelPage} ${page}` : undefined,\n    tabIndex: getTabIndex(page) ?? undefined,\n    position: page,\n    isActive: isActivePage(page),\n    isSmHidden,\n  })\n\nconst firstButtonProps = computed(() =>\n  getButtonProps({\n    page: 1,\n    disabled: firstDisabled.value,\n    classVal: props.firstClass,\n    slotName: 'first-text',\n    textValue: props.firstText,\n    label: props.labelFirstPage,\n  })\n)\nconst prevButtonProps = computed(() =>\n  getButtonProps({\n    page: Math.max(computedModelValue.value - 1, 1),\n    disabled: prevDisabled.value,\n    classVal: props.prevClass,\n    slotName: 'prev-text',\n    textValue: props.prevText,\n    label: props.labelPrevPage,\n  })\n)\nconst nextButtonProps = computed(() =>\n  getButtonProps({\n    page: Math.min(computedModelValue.value + 1, numberOfPages.value),\n    disabled: nextDisabled.value,\n    classVal: props.nextClass,\n    slotName: 'next-text',\n    textValue: props.nextText,\n    label: props.labelNextPage,\n  })\n)\nconst lastButtonProps = computed(() =>\n  getButtonProps({\n    page: numberOfPages.value,\n    disabled: lastDisabled.value,\n    classVal: props.lastClass,\n    slotName: 'last-text',\n    textValue: props.lastText,\n    label: props.labelLastPage,\n  })\n)\n\nconst ellipsisProps = computed(() => ({\n  li: {\n    class: [\n      'page-item',\n      'disabled',\n      'text-center',\n      'bv-d-sm-down-none',\n      computedFill.value ? 'flex-fill' : '',\n      props.ellipsisClass,\n    ],\n    role: 'separator',\n  },\n  span: {\n    class: ['page-link'],\n  },\n}))\n\nconst computedWrapperClasses = computed(() => [\n  alignment.value,\n  {\n    [`pagination-${props.size}`]: props.size !== undefined,\n    'b-pagination-pills': props.pills,\n  },\n])\n\nconst pagination = computed(() => ({\n  pageSize: perPageSanitized.value,\n  totalRows: totalRowsNumber.value,\n  numberOfPages: numberOfPages.value,\n}))\n\nconst pageClick = (event: Readonly<MouseEvent>, pageNumber: number) => {\n  if (pageNumber === computedModelValue.value) return\n  const clickEvent = new BvEvent('page-click', {\n    cancelable: true,\n    target: event.target,\n  })\n  emit('page-click', clickEvent, pageNumber)\n\n  if (clickEvent.defaultPrevented) return\n\n  modelValue.value = pageNumber\n\n  nextTick(() => {\n    if (pageNumber === 1) {\n      focusFirst()\n    } else if (pageNumber === pagination.value.numberOfPages) {\n      focusLast()\n    }\n  })\n  //    nextTick(() => {\n  //  if (isVisible(target) && un_element.contains(target)) {\n  //  attemptFocus(target)\n  //} else {\n  //this.focusCurrent()\n  //}\n  // })\n}\n\nconst isDisabled = (el: HTMLButtonElement) => {\n  const isElement = !!(el && el.nodeType === Node.ELEMENT_NODE)\n  const hasAttr = isElement ? el.hasAttribute('disabled') : null\n  const hasClass = isElement && el.classList ? el.classList.contains('disabled') : false\n\n  return !isElement || el.disabled || hasAttr || hasClass\n}\n\nconst getButtons = (): HTMLButtonElement[] =>\n  [...(pageElements.value ?? [])]\n    ?.sort(\n      (a, b) =>\n        parseInt(a.getAttribute('displayIndex') || '0') -\n        parseInt(b.getAttribute('displayIndex') || '0')\n    )\n    ?.map((page) => page.children[0])\n    ?.filter((el) => {\n      if (el.getAttribute('display') === 'none' || el.tagName.toUpperCase() !== 'BUTTON') {\n        return false\n      }\n\n      const bcr = el.getBoundingClientRect()\n\n      return !!(bcr && bcr.height > 0 && bcr.width > 0)\n    })\n    ?.map((el) => el as HTMLButtonElement)\n\nconst focusFirst = () => {\n  nextTick(() => {\n    const btn = getButtons().find((el) => !isDisabled(el))\n    btn?.focus()\n  })\n}\n\nconst focusPrev = () => {\n  nextTick(() => {\n    const buttons = getButtons()\n    const index = buttons.indexOf(getActiveElement() as HTMLButtonElement)\n\n    if (index > 0 && !isDisabled(buttons[index - 1])) {\n      buttons[index - 1]?.focus()\n    }\n  })\n}\n\nconst focusLast = () => {\n  nextTick(() => {\n    const btn = getButtons()\n      .reverse()\n      .find((el) => !isDisabled(el))\n    btn?.focus()\n  })\n}\n\nconst focusNext = () => {\n  nextTick(() => {\n    const buttons = getButtons()\n    const index = buttons.indexOf(getActiveElement() as HTMLButtonElement)\n    if (index < buttons.length - 1 && !isDisabled(buttons[index + 1])) {\n      buttons[index + 1]?.focus()\n    }\n  })\n}\n\nconst handleKeyNav = (event: KeyboardEvent) => {\n  const {code, shiftKey} = event\n  if (code === CODE_LEFT || code === CODE_UP) {\n    stopEvent(event)\n    if (shiftKey) {\n      focusFirst()\n    } else {\n      focusPrev()\n    }\n  } else if (code === CODE_RIGHT || code === CODE_DOWN) {\n    stopEvent(event)\n    if (shiftKey) {\n      focusLast()\n    } else {\n      focusNext()\n    }\n  }\n}\n\nconst computedModelValue = computed(() => {\n  const page = modelValueNumber.value || 1\n  return page > numberOfPages.value ? numberOfPages.value : page < 1 ? 1 : page\n})\n\nwatch(pagination, (oldValue, newValue) => {\n  if (newValue.pageSize !== oldValue.pageSize && newValue.totalRows === oldValue.totalRows) {\n    // If the page size changes, reset to page 1\n    modelValue.value = 1\n  }\n})\n\nconst noFirstButton = computed(() => (props.noGotoEndButtons && !props.firstNumber ? 1 : 0))\nconst noLastButton = computed(() => (props.noGotoEndButtons && !props.lastNumber ? 1 : 0))\nconst showFirstButton = computed(() => (noFirstButton.value ? 0 : 1))\nconst showLastButton = computed(() => (noLastButton.value ? 0 : 1))\nconst firstPage = computed(() => (props.firstNumber ? 1 : 0))\nconst lastPage = computed(() => (props.lastNumber ? 1 : 0))\nconst halfLimit = computed(() => Math.floor(limitNumber.value / 2))\n\nconst pages = computed(() => {\n  const {value} = computedModelValue\n\n  const els = elements.value.map((p) => {\n    switch (p) {\n      case FIRST_BUTTON:\n        return {id: p, ...firstButtonProps.value}\n      case PREV_BUTTON:\n        return {id: p, ...prevButtonProps.value}\n      case NEXT_BUTTON:\n        return {id: p, ...nextButtonProps.value}\n      case LAST_BUTTON:\n        return {id: p, ...lastButtonProps.value}\n      case FIRST_ELLIPSIS:\n      case LAST_ELLIPSIS:\n        return {id: p, ...ellipsisProps.value}\n      default:\n        return {id: p, ...getPageButtonProps(p)}\n    }\n  })\n\n  if (numberOfPages.value > 3) {\n    if (value > numberOfPages.value - halfLimit.value - lastPage.value) {\n      const idx = 2 + showFirstButton.value\n      els[idx] = {id: els[idx].id, ...getPageButtonProps(els[idx].id, true)}\n    }\n\n    if (value <= halfLimit.value + firstPage.value) {\n      const idx = els.length - (3 + showLastButton.value)\n      els[idx] = {id: els[idx].id, ...getPageButtonProps(els[idx].id, true)}\n    }\n  }\n\n  return els as PageButton[]\n})\n\nconst elements = computed(() => {\n  // The idea here is to create an array of all the buttons on the page control.\n  // This way we can keep the invariants in one place and the template code just\n  // iterates over the array.\n\n  const pages = numberOfPages.value\n  const {value} = computedModelValue\n  const limit = limitNumber.value\n  const noEllipsis = props.noEllipsis || limit <= ELLIPSIS_THRESHOLD\n\n  // The first case is when all of the page buttons fit on the control, this is\n  //  the simplest case and the only one that will create an array smaller than\n  //  Limit + 4 - noEndButtons * 2 (the [first, last,] prev, next buttons)\n\n  if (pages < limit + firstPage.value + lastPage.value) {\n    return [\n      !firstPage.value && !noFirstButton.value ? FIRST_BUTTON : null,\n      PREV_BUTTON,\n      ...Array.from({length: pages}, (_, index) => index + 1),\n      NEXT_BUTTON,\n      !lastPage.value && !noLastButton.value ? LAST_BUTTON : null,\n    ].filter((x) => x !== null) as number[]\n  }\n\n  // All of the remaining cases result in an array that is exactly limit + 4 - noEndButtons * 2 in length, so create\n  //  the array upfront and set up the beginning and end buttons, then fill the rest for each case\n\n  const buttons = Array.from({length: limit + 4 - (noFirstButton.value + noLastButton.value)})\n  if (!noFirstButton.value) {\n    if (!firstPage.value) {\n      buttons[0] = FIRST_BUTTON\n      buttons[1] = PREV_BUTTON\n    } else {\n      buttons[0] = PREV_BUTTON\n      buttons[1] = 1\n    }\n  } else {\n    buttons[0] = PREV_BUTTON\n  }\n\n  if (!noLastButton.value) {\n    if (!lastPage.value) {\n      buttons[buttons.length - 1] = LAST_BUTTON\n      buttons[buttons.length - 2] = NEXT_BUTTON\n    } else {\n      buttons[buttons.length - 1] = NEXT_BUTTON\n      buttons[buttons.length - 2] = pages\n    }\n  } else {\n    buttons[buttons.length - 1] = NEXT_BUTTON\n  }\n\n  // The next case is where the page buttons start at the begginning, with\n  //  no ellipsis at the beginning, but one at the end\n\n  if (value <= halfLimit.value + firstPage.value) {\n    for (let index = 1; index <= limit; index++) {\n      buttons[index + 1 - noFirstButton.value] = index + firstPage.value\n    }\n\n    if (!noEllipsis) {\n      buttons[buttons.length - (2 + showLastButton.value)] = LAST_ELLIPSIS\n    }\n  }\n\n  // And then we have the case where the page buttons go up to the end, with no\n  //  ellipsis at the end, but one at the beginning\n\n  if (value > pages - halfLimit.value - lastPage.value) {\n    const start = pages - (limit - 1) - lastPage.value\n    for (let index = 0; index < limit; index++) {\n      buttons[index + 2 - noFirstButton.value] = start + index\n    }\n\n    if (!noEllipsis) {\n      buttons[1 + showFirstButton.value] = FIRST_ELLIPSIS\n    }\n  }\n\n  // Finally we have the case where we have ellipsis at both ends\n  if (!buttons[2]) {\n    // Is there a more elegant way to ceck that we're in the final case?\n    const start = value - Math.floor(limit / 2)\n    for (let index = 0; index < limit; index++) {\n      buttons[index + 2 - noFirstButton.value] = start + index\n    }\n\n    if (!noEllipsis) {\n      buttons[1 + showFirstButton.value] = FIRST_ELLIPSIS\n      buttons[buttons.length - (2 + showLastButton.value)] = LAST_ELLIPSIS\n    }\n  }\n\n  //Enable sanity check for debugging purposes\n  // for (let i = 0; i < buttons.length; i++) {\n  //   if (!buttons[i]) {\n  //     // eslint-disable-next-line no-console\n  //     console.log(\n  //       `Failed: button == ${i}, limit=${limit}, pages=${pages}, firstPage=${firstPage}, lastPage=${lastPage}, value=${value}`\n  //     )\n  //   }\n  // }\n\n  return buttons.filter((x) => x !== null) as number[]\n})\n</script>\n\n<script lang=\"ts\">\nconst DEFAULT_PER_PAGE = 20\nconst DEFAULT_TOTAL_ROWS = 0\n</script>\n"],"names":["PREV_BUTTON","NEXT_BUTTON","_props","__props","props","useDefaults","emit","__emit","modelValue","_useModel","pageElements","useTemplateRef","limitNumber","useToNumber","limit","nanToZero","method","perPageNumber","perPage","totalRowsNumber","totalRows","modelValueNumber","perPageSanitized","computed","Math","max","value","totalRowsSanitized","numberOfPages","ceil","computedFill","align","justifyAlign","alignment","useAlignment","isActivePage","pageNumber","computedModelValue","checkDisabled","num","disabled","firstDisabled","prevDisabled","lastDisabled","nextDisabled","getBaseButtonProps","page","classVal","slotName","textValue","tabIndex","label","position","isActive","hidden","isSmHidden","li","class","active","role","button","is","ariaControls","type","tabindex","text","name","index","content","clickHandler","e","pageClick","getButtonProps","getPageButtonProps","pageClass","labelPage","firstButtonProps","firstClass","firstText","labelFirstPage","prevButtonProps","prevClass","prevText","labelPrevPage","nextButtonProps","min","nextClass","nextText","labelNextPage","lastButtonProps","lastClass","lastText","labelLastPage","ellipsisProps","ellipsisClass","span","computedWrapperClasses","size","pills","pagination","pageSize","event","clickEvent","BvEvent","cancelable","target","defaultPrevented","nextTick","focusFirst","focusLast","isDisabled","el","isElement","nodeType","Node","ELEMENT_NODE","hasAttr","hasAttribute","hasClass","classList","contains","getButtons","_d","_c","_b","_a","sort","a","b","parseInt","getAttribute","map","children","filter","tagName","toUpperCase","bcr","getBoundingClientRect","height","width","btn","find","focus","reverse","handleKeyNav","code","shiftKey","CODE_LEFT","CODE_UP","stopEvent","buttons","indexOf","getActiveElement","CODE_RIGHT","CODE_DOWN","length","watch","oldValue","newValue","noFirstButton","noGotoEndButtons","firstNumber","noLastButton","lastNumber","showFirstButton","showLastButton","firstPage","lastPage","halfLimit","floor","pages","els","elements","p","id","idx","noEllipsis","Array","from","_","x","start"],"mappings":"moCAykByB,+HACE,4HArhB3B,MAGMA,GAAc,EACdC,GAAc,EAcdC,EAASC,EA+BTC,EAAQC,EAAAA,YAAYH,EAAQ,eAE5BI,EAAOC,EAIPC,EAAaC,EAAAA,SAElBN,EAAA,cAEKO,EAAeC,iBAAgC,iBAE/CC,EAAcC,eAAY,IAAMT,EAAMU,OAAO,CAACC,WAAW,EAAMC,OAAQ,aACvEC,EAAgBJ,eAAY,IAAMT,EAAMc,SAAS,CAACH,WAAW,EAAMC,OAAQ,aAC3EG,EAAkBN,eAAY,IAAMT,EAAMgB,WAAW,CAACL,WAAW,EAAMC,OAAQ,aAC/EK,EAAmBR,cAAYL,EAAY,CAACO,WAAW,EAAMC,OAAQ,aAErEM,EAAmBC,YAAS,IAAMC,KAAKC,IAAIR,EAAcS,OAkdtC,GAldiE,KACpFC,EAAqBJ,YAAS,IAAMC,KAAKC,IAAIN,EAAgBO,OAkdxC,EAldqE,KAE1FE,EAAgBL,YAAS,IAAMC,KAAKK,KAAKF,EAAmBD,MAAQJ,EAAiBI,SACrFI,EAAeP,EAAAA,UAAS,IAAsB,SAAhBnB,EAAM2B,QAEpCC,EAAeT,YAAS,IAAuB,SAAhBnB,EAAM2B,MAAmB,QAAU3B,EAAM2B,QAExEE,EAAYC,eAAaF,GAEzBG,EAAgBC,GAAuBA,IAAeC,EAAmBX,MAGzEY,EAAiBC,GACrBnC,EAAMoC,UACNL,EAAaI,IACbF,EAAmBX,MAAQ,GAE3Ba,EAAM,GACNA,EAAMX,EAAcF,MAEhBe,EAAgBlB,EAAAA,UAAS,IAAMe,EAAc,KAC7CI,EAAenB,EAAAA,UAAS,IAAMe,EAAcD,EAAmBX,MAAQ,KACvEiB,EAAepB,EAAAA,UAAS,IAAMe,EAAcV,EAAcF,SAC1DkB,EAAerB,EAAAA,UAAS,IAAMe,EAAcD,EAAmBX,MAAQ,KAEvEmB,EAAqB,EACzBC,OACAC,WACAP,WACAQ,WACAC,YACAC,WACAC,QACAC,WACAC,WACAC,SACAC,iBAaK,CACLC,GAAI,CACFC,MAAS,CACP,YACA,CACEC,OAAUL,EACVb,WACA,oBAAqBe,EACrB,YAAazB,EAAaJ,MAC1B,SAAUI,EAAaJ,QAAUc,GAEnCO,GAEFY,KAAQ,eACR,cAAeL,GAEjBM,OAAQ,CACNC,GAAMrB,EAAW,OAAS,SAC1BiB,MAAS,CAAC,YAAa,cAAe,CAAC,eAAgBjB,GAAYV,EAAaJ,QAChF,aAAcyB,EACd,gBAAiB/C,EAAM0D,mBAAgB,EACvC,kBAAiBtB,QAAkB,EACnC,gBAAiBY,EACjB,eAAgBA,EAAWxB,EAAcF,WAAQ,EACjDiC,KAAQ,WACRI,KAAQvB,OAAW,EAAY,SAC/BwB,SAAYxB,OAAW,EAAYU,GAErCe,KAAM,CACJC,KAAMlB,EACNU,OAAQL,EACR3B,MAAOuB,GAAaH,EACpBA,OACAN,WACA2B,MAAOrB,EAAO,EACdsB,QAASnB,OAAY,EAAYH,GAEnCuB,aAAeC,GAA4BC,EAAUD,EAAGxB,KAGpD0B,EAAiB,EACrB1B,OACAC,WACAP,WACAQ,WACAC,YACAE,WAQIN,EAAmB,CAACC,OAAMC,WAAUP,WAAUQ,WAAUC,YAAWE,QAAOD,SAAU,OAEpFuB,EAAqB,CAAC3B,EAAcS,KACxCV,SAAmB,CACjBC,OACAN,SAAUpC,EAAMoC,SAChBO,SAAU3C,EAAMsE,UAChB1B,SAAU,OACVG,MAAO/C,EAAMuE,UAAY,GAAGvE,EAAMuE,aAAa7B,SAAS,EACxDI,UAtGiBX,EAsGKO,GAtGY1C,EAAMoC,SAAW,KAAOL,EAAaI,GAAO,IAAM,YAsGrD,GAC/Ba,SAAUN,EACVO,SAAUlB,EAAaW,GACvBS,eAzGgB,IAAChB,CA0GlB,EAEGqC,EAAmBrD,EAAAA,UAAS,IAChCiD,EAAe,CACb1B,KAAM,EACNN,SAAUC,EAAcf,MACxBqB,SAAU3C,EAAMyE,WAChB7B,SAAU,aACVC,UAAW7C,EAAM0E,UACjB3B,MAAO/C,EAAM2E,mBAGXC,EAAkBzD,EAAAA,UAAS,IAC/BiD,EAAe,CACb1B,KAAMtB,KAAKC,IAAIY,EAAmBX,MAAQ,EAAG,GAC7Cc,SAAUE,EAAahB,MACvBqB,SAAU3C,EAAM6E,UAChBjC,SAAU,YACVC,UAAW7C,EAAM8E,SACjB/B,MAAO/C,EAAM+E,kBAGXC,EAAkB7D,EAAAA,UAAS,IAC/BiD,EAAe,CACb1B,KAAMtB,KAAK6D,IAAIhD,EAAmBX,MAAQ,EAAGE,EAAcF,OAC3Dc,SAAUI,EAAalB,MACvBqB,SAAU3C,EAAMkF,UAChBtC,SAAU,YACVC,UAAW7C,EAAMmF,SACjBpC,MAAO/C,EAAMoF,kBAGXC,EAAkBlE,EAAAA,UAAS,IAC/BiD,EAAe,CACb1B,KAAMlB,EAAcF,MACpBc,SAAUG,EAAajB,MACvBqB,SAAU3C,EAAMsF,UAChB1C,SAAU,YACVC,UAAW7C,EAAMuF,SACjBxC,MAAO/C,EAAMwF,kBAIXC,EAAgBtE,EAAAA,UAAS,KAAO,CACpCiC,GAAI,CACFC,MAAO,CACL,YACA,WACA,cACA,oBACA3B,EAAaJ,MAAQ,YAAc,GACnCtB,EAAM0F,eAERnC,KAAM,aAERoC,KAAM,CACJtC,MAAO,CAAC,kBAINuC,EAAyBzE,EAAAA,UAAS,IAAM,CAC5CU,EAAUP,MACV,CACE,CAAC,cAActB,EAAM6F,aAAwB,IAAf7F,EAAM6F,KACpC,qBAAsB7F,EAAM8F,UAI1BC,EAAa5E,EAAAA,UAAS,KAAO,CACjC6E,SAAU9E,EAAiBI,MAC3BN,UAAWD,EAAgBO,MAC3BE,cAAeA,EAAcF,UAGzB6C,EAAY,CAAC8B,EAA6BjE,KAC1C,GAAAA,IAAeC,EAAmBX,MAAO,OACvC,MAAA4E,EAAa,IAAIC,EAAAA,QAAQ,aAAc,CAC3CC,YAAY,EACZC,OAAQJ,EAAMI,SAEXnG,EAAA,aAAcgG,EAAYlE,GAE3BkE,EAAWI,mBAEflG,EAAWkB,MAAQU,EAEnBuE,EAAAA,UAAS,KACY,IAAfvE,EACSwE,IACFxE,IAAe+D,EAAWzE,MAAME,eAC/BiF,GAAA,IAEb,EAUGC,EAAcC,IAClB,MAAMC,KAAeD,GAAMA,EAAGE,WAAaC,KAAKC,cAC1CC,EAAUJ,EAAYD,EAAGM,aAAa,YAAc,KACpDC,KAAWN,IAAaD,EAAGQ,YAAYR,EAAGQ,UAAUC,SAAS,YAEnE,OAAQR,GAAaD,EAAGvE,UAAY4E,GAAWE,CAAA,EAG3CG,EAAa,iBACjB,OAAA,OAAAC,EAAA,OAAAC,EAAA,OAAAC,EAAA,OAAAC,EAAA,IAAKnH,EAAagB,OAAS,UACvB,EAAAmG,EAAAC,MACA,CAACC,EAAGC,IACFC,SAASF,EAAEG,aAAa,iBAAmB,KAC3CD,SAASD,EAAEE,aAAa,iBAAmB,aAJjD,EAAAN,EAMIO,KAAKrF,GAASA,EAAKsF,SAAS,WANhC,EAAAT,EAOIU,QAAQtB,IACJ,GAA+B,SAA/BA,EAAGmB,aAAa,YAAsD,WAA7BnB,EAAGuB,QAAQC,cAC/C,OAAA,EAGH,MAAAC,EAAMzB,EAAG0B,wBAEf,SAAUD,GAAOA,EAAIE,OAAS,GAAKF,EAAIG,MAAQ,EAAA,UAdnD,EAAAjB,EAgBIS,KAAKpB,GAAOA,GAAA,EAEZH,EAAa,KACjBD,EAAAA,UAAS,KACD,MAAAiC,EAAMnB,IAAaoB,MAAM9B,IAAQD,EAAWC,KAC7C,MAAA6B,GAAAA,EAAAE,OAAA,GACN,EAcGjC,EAAY,KAChBF,EAAAA,UAAS,KACD,MAAAiC,EAAMnB,IACTsB,UACAF,MAAM9B,IAAQD,EAAWC,KACvB,MAAA6B,GAAAA,EAAAE,OAAA,GACN,EAaGE,EAAgB3C,IACd,MAAA4C,KAACA,EAAMC,SAAAA,GAAY7C,EACrB4C,IAASE,EAAAA,WAAaF,IAASG,WACjCC,EAAAA,UAAUhD,GACN6C,EACStC,IAlCfD,EAAAA,UAAS,WACP,MAAM2C,EAAU7B,IACVtD,EAAQmF,EAAQC,QAAQC,EAAAA,oBAE1BrF,EAAQ,IAAM2C,EAAWwC,EAAQnF,EAAQ,MACnC,OAAAA,EAAAA,EAAAA,EAAQ,KAAI0D,EAAAiB,QAAM,KAiCnBG,IAASQ,cAAcR,IAASS,EAAAA,YACzCL,EAAAA,UAAUhD,GACN6C,EACQrC,IArBdF,EAAAA,UAAS,WACP,MAAM2C,EAAU7B,IACVtD,EAAQmF,EAAQC,QAAQC,EAAAA,oBAC1BrF,EAAQmF,EAAQK,OAAS,IAAM7C,EAAWwC,EAAQnF,EAAQ,MACpD,OAAAA,EAAAA,EAAAA,EAAQ,KAAI0D,EAAAiB,QAAM,IAoB5B,EAIEzG,EAAqBd,EAAAA,UAAS,KAC5B,MAAAuB,EAAOzB,EAAiBK,OAAS,EACvC,OAAOoB,EAAOlB,EAAcF,MAAQE,EAAcF,MAAQoB,EAAO,EAAI,EAAIA,CAAA,IAGrE8G,EAAAA,MAAAzD,GAAY,CAAC0D,EAAUC,KACvBA,EAAS1D,WAAayD,EAASzD,UAAY0D,EAAS1I,YAAcyI,EAASzI,YAE7EZ,EAAWkB,MAAQ,EAAA,IAIjB,MAAAqI,EAAgBxI,YAAS,IAAOnB,EAAM4J,mBAAqB5J,EAAM6J,YAAc,EAAI,IACnFC,EAAe3I,YAAS,IAAOnB,EAAM4J,mBAAqB5J,EAAM+J,WAAa,EAAI,IACjFC,GAAkB7I,EAAAA,UAAS,IAAOwI,EAAcrI,MAAQ,EAAI,IAC5D2I,GAAiB9I,EAAAA,UAAS,IAAO2I,EAAaxI,MAAQ,EAAI,IAC1D4I,GAAY/I,EAAAA,UAAS,IAAOnB,EAAM6J,YAAc,EAAI,IACpDM,GAAWhJ,EAAAA,UAAS,IAAOnB,EAAM+J,WAAa,EAAI,IAClDK,GAAYjJ,YAAS,IAAMC,KAAKiJ,MAAM7J,EAAYc,MAAQ,KAE1DgJ,GAAQnJ,EAAAA,UAAS,KACf,MAAAG,MAACA,GAASW,EAEVsI,EAAMC,GAASlJ,MAAMyG,KAAK0C,IAC9B,OAAQA,GACN,KAvYe,EAwYb,MAAO,CAACC,GAAID,KAAMjG,EAAiBlD,OACrC,KAAK1B,EACH,MAAO,CAAC8K,GAAID,KAAM7F,EAAgBtD,OACpC,KAAKzB,EACH,MAAO,CAAC6K,GAAID,KAAMzF,EAAgB1D,OACpC,KA1Yc,EA2YZ,MAAO,CAACoJ,GAAID,KAAMpF,EAAgB/D,OACpC,KA3YiB,EA4YjB,KA3YgB,EA4Yd,MAAO,CAACoJ,GAAID,KAAMhF,EAAcnE,OAClC,QACE,MAAO,CAACoJ,GAAID,KAAMpG,EAAmBoG,IAAE,IAIzC,GAAAjJ,EAAcF,MAAQ,EAAG,CAC3B,GAAIA,EAAQE,EAAcF,MAAQ8I,GAAU9I,MAAQ6I,GAAS7I,MAAO,CAC5D,MAAAqJ,EAAM,EAAIX,GAAgB1I,MAChCiJ,EAAII,GAAO,CAACD,GAAIH,EAAII,GAAKD,MAAOrG,EAAmBkG,EAAII,GAAKD,IAAI,GAAK,CAGvE,GAAIpJ,GAAS8I,GAAU9I,MAAQ4I,GAAU5I,MAAO,CAC9C,MAAMqJ,EAAMJ,EAAIhB,QAAU,EAAIU,GAAe3I,OAC7CiJ,EAAII,GAAO,CAACD,GAAIH,EAAII,GAAKD,MAAOrG,EAAmBkG,EAAII,GAAKD,IAAI,GAAK,CACvE,CAGK,OAAAH,CAAA,IAGHC,GAAWrJ,EAAAA,UAAS,KAKxB,MAAMmJ,EAAQ9I,EAAcF,OACtBA,MAACA,GAASW,EACVvB,EAAQF,EAAYc,MACpBsJ,EAAa5K,EAAM4K,YAAclK,GAhbd,EAsbzB,GAAI4J,EAAQ5J,EAAQwJ,GAAU5I,MAAQ6I,GAAS7I,MACtC,MAAA,CACJ4I,GAAU5I,OAAUqI,EAAcrI,MAAuB,MAtb3C,EAubf1B,KACGiL,MAAMC,KAAK,CAACvB,OAAQe,IAAQ,CAACS,EAAGhH,IAAUA,EAAQ,IACrDlE,EACCsK,GAAS7I,OAAUwI,EAAaxI,MAAsB,MAvbzC,GAwbd2G,QAAQ+C,GAAY,OAANA,IAMZ,MAAA9B,EAAU2B,MAAMC,KAAK,CAACvB,OAAQ7I,EAAQ,GAAKiJ,EAAcrI,MAAQwI,EAAaxI,SA4BpF,GA3BKqI,EAAcrI,MASjB4H,EAAQ,GAAKtJ,EARRsK,GAAU5I,OAIb4H,EAAQ,GAAKtJ,EACbsJ,EAAQ,GAAK,IAJbA,EAAQ,IApcO,EAqcfA,EAAQ,GAAKtJ,GASZkK,EAAaxI,MASR4H,EAAAA,EAAQK,OAAS,GAAK1J,EARzBsK,GAAS7I,OAIJ4H,EAAAA,EAAQK,OAAS,GAAK1J,EACtBqJ,EAAAA,EAAQK,OAAS,GAAKe,IAJtBpB,EAAAA,EAAQK,OAAS,IA7cX,EA8cNL,EAAAA,EAAQK,OAAS,GAAK1J,GAY9ByB,GAAS8I,GAAU9I,MAAQ4I,GAAU5I,MAAO,CAC9C,IAAA,IAASyC,EAAQ,EAAGA,GAASrD,EAAOqD,IAClCmF,EAAQnF,EAAQ,EAAI4F,EAAcrI,OAASyC,EAAQmG,GAAU5I,MAG1DsJ,IACH1B,EAAQA,EAAQK,QAAU,EAAIU,GAAe3I,SA9d7B,EA+dlB,CAMF,GAAIA,EAAQgJ,EAAQF,GAAU9I,MAAQ6I,GAAS7I,MAAO,CACpD,MAAM2J,EAAQX,GAAS5J,EAAQ,GAAKyJ,GAAS7I,MAC7C,IAAA,IAASyC,EAAQ,EAAGA,EAAQrD,EAAOqD,IACjCmF,EAAQnF,EAAQ,EAAI4F,EAAcrI,OAAS2J,EAAQlH,EAGhD6G,IACK1B,EAAA,EAAIc,GAAgB1I,QA7eX,EA8enB,CAIE,IAAC4H,EAAQ,GAAI,CAEf,MAAM+B,EAAQ3J,EAAQF,KAAKiJ,MAAM3J,EAAQ,GACzC,IAAA,IAASqD,EAAQ,EAAGA,EAAQrD,EAAOqD,IACjCmF,EAAQnF,EAAQ,EAAI4F,EAAcrI,OAAS2J,EAAQlH,EAGhD6G,IACK1B,EAAA,EAAIc,GAAgB1I,QA1fX,EA2fjB4H,EAAQA,EAAQK,QAAU,EAAIU,GAAe3I,SA1f7B,EA2flB,CAaF,OAAO4H,EAAQjB,QAAQ+C,GAAY,OAANA,GAAU,ubAzgBlB,WACD"}