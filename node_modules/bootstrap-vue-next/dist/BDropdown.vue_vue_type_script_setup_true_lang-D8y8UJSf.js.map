{"version":3,"file":"BDropdown.vue_vue_type_script_setup_true_lang-D8y8UJSf.js","sources":["../src/components/BDropdown/BDropdown.vue"],"sourcesContent":["<template>\n  <ConditionalWrapper\n    :skip=\"inInputGroup || props.noWrapper\"\n    :class=\"computedClasses\"\n    :role=\"inButtonGroupAttributes?.role\"\n  >\n    <BButton\n      :id=\"computedId\"\n      ref=\"_splitButton\"\n      :variant=\"props.splitVariant || props.variant\"\n      :size=\"props.size\"\n      :class=\"buttonClasses\"\n      :disabled=\"props.splitDisabled || props.disabled\"\n      :type=\"props.splitButtonType\"\n      :aria-label=\"props.ariaLabel\"\n      :aria-expanded=\"props.split ? undefined : showRef\"\n      :aria-haspopup=\"props.split ? undefined : 'menu'\"\n      :href=\"props.split ? props.splitHref : undefined\"\n      :to=\"props.split && props.splitTo ? props.splitTo : undefined\"\n      @click=\"onSplitClick\"\n    >\n      <slot name=\"button-content\"> {{ props.text }} </slot>\n    </BButton>\n    <BButton\n      v-if=\"props.split\"\n      :id=\"computedId + '-split'\"\n      ref=\"_button\"\n      :variant=\"props.variant\"\n      :size=\"props.size\"\n      :disabled=\"props.disabled\"\n      :class=\"[props.toggleClass, {show: showRef}]\"\n      class=\"dropdown-toggle-split dropdown-toggle\"\n      :aria-expanded=\"showRef\"\n      aria-haspopup=\"menu\"\n      @click=\"onButtonClick\"\n    >\n      <span class=\"visually-hidden\">\n        <slot name=\"toggle-text\">\n          {{ props.toggleText }}\n        </slot>\n      </span>\n    </BButton>\n    <ConditionalTeleport\n      :to=\"props.teleportTo\"\n      :disabled=\"!props.teleportTo || props.teleportDisabled\"\n    >\n      <Transition\n        v-if=\"renderRef || contentShowing\"\n        v-bind=\"transitionProps\"\n        :appear=\"modelValue || props.visible\"\n      >\n        <ul\n          v-show=\"showRef\"\n          :id=\"computedId + '-menu'\"\n          ref=\"_floating\"\n          :style=\"[floatingStyles, sizeStyles]\"\n          class=\"dropdown-menu overflow-auto\"\n          :class=\"[props.menuClass, computedMenuClasses]\"\n          :aria-labelledby=\"computedId\"\n          :role=\"props.role\"\n          style=\"display: block\"\n          @click=\"onClickInside\"\n        >\n          <slot v-if=\"contentShowing\" :hide=\"hide\" :show=\"show\" :visible=\"showRef\" />\n        </ul>\n      </Transition>\n    </ConditionalTeleport>\n  </ConditionalWrapper>\n</template>\n\n<script setup lang=\"ts\">\nimport {\n  autoUpdate,\n  type Boundary,\n  flip,\n  type Middleware,\n  offset as offsetMiddleware,\n  type ReferenceElement,\n  type RootBoundary,\n  shift,\n  size as sizeMiddleware,\n  useFloating,\n} from '@floating-ui/vue'\nimport {onClickOutside, onKeyStroke, useToNumber} from '@vueuse/core'\nimport {\n  computed,\n  type CSSProperties,\n  type EmitFn,\n  inject,\n  nextTick,\n  provide,\n  ref,\n  toRef,\n  useTemplateRef,\n  watch,\n} from 'vue'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {useId} from '../../composables/useId'\nimport type {BDropdownProps} from '../../types/ComponentProps'\nimport type {BDropdownEmits} from '../../types/ComponentEmits'\nimport BButton from '../BButton/BButton.vue'\nimport ConditionalWrapper from '../ConditionalWrapper.vue'\nimport ConditionalTeleport from '../ConditionalTeleport.vue'\nimport {isBoundary, isRootBoundary, resolveBootstrapCaret} from '../../utils/floatingUi'\nimport {getElement} from '../../utils/getElement'\nimport {buttonGroupKey, dropdownInjectionKey, inputGroupKey} from '../../utils/keys'\nimport {useShowHide} from '../../composables/useShowHide'\n\nconst _props = withDefaults(defineProps<Omit<BDropdownProps, 'modelValue'>>(), {\n  ariaLabel: undefined,\n  autoClose: true,\n  boundary: 'clippingAncestors',\n  boundaryPadding: undefined,\n  teleportTo: undefined,\n  teleportDisabled: false,\n  disabled: false,\n  floatingMiddleware: undefined,\n  id: undefined,\n  initialAnimation: false,\n  isNav: false,\n  lazy: false,\n  menuClass: undefined,\n  noCaret: false,\n  noFade: false,\n  noFlip: false,\n  noShift: false,\n  noSize: false,\n  offset: 0,\n  unmountLazy: false,\n  role: 'menu',\n  size: 'md',\n  noWrapper: false,\n  split: false,\n  splitButtonType: 'button',\n  splitClass: undefined,\n  splitDisabled: undefined,\n  splitHref: undefined,\n  splitTo: undefined,\n  placement: 'bottom-start',\n  splitVariant: undefined,\n  strategy: 'absolute',\n  text: undefined,\n  show: false,\n  toggleClass: undefined,\n  toggleText: 'Toggle dropdown',\n  transProps: undefined,\n  variant: 'secondary',\n  visible: false,\n  wrapperClass: undefined,\n})\nconst props = useDefaults(_props, 'BDropdown')\n\nconst emit = defineEmits<BDropdownEmits>()\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'button-content'?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'default'?: (props: {hide: () => void; show: () => void; visible: boolean}) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'toggle-text'?: (props: Record<string, never>) => any\n}>()\n\nconst computedId = useId(() => props.id, 'dropdown')\n\nconst modelValue = defineModel<Exclude<BDropdownProps['modelValue'], undefined>>({default: false})\n\nconst inInputGroup = inject(inputGroupKey, false)\nconst inButtonGroup = inject(buttonGroupKey, false)\n\nconst computedOffset = computed(() =>\n  typeof props.offset === 'string' || typeof props.offset === 'number' ? props.offset : NaN\n)\nconst offsetToNumber = useToNumber(computedOffset)\n\nconst floatingElement = useTemplateRef<HTMLElement>('_floating')\nconst button = useTemplateRef<HTMLElement>('_button')\nconst splitButton = useTemplateRef<HTMLElement>('_splitButton')\n\nconst boundary = computed<Boundary | undefined>(() =>\n  isBoundary(props.boundary) ? props.boundary : undefined\n)\nconst rootBoundary = computed<RootBoundary | undefined>(() =>\n  isRootBoundary(props.boundary) ? props.boundary : undefined\n)\n\nconst referenceElement = computed(() => (!props.split ? splitButton.value : button.value))\nlet cleanup: ReturnType<typeof autoUpdate> | undefined\n\nconst {\n  showRef,\n  renderRef,\n  hide,\n  show,\n  toggle,\n  computedNoAnimation,\n  transitionProps,\n  contentShowing,\n  isVisible,\n} = useShowHide(modelValue, props, emit as EmitFn, referenceElement, computedId, {\n  showFn: () => {\n    update()\n    nextTick(() => {\n      cleanup = autoUpdate(\n        referenceElement.value as ReferenceElement,\n        floatingElement.value as HTMLElement,\n        update,\n        {\n          animationFrame: false,\n        }\n      )\n    })\n  },\n  hideFn: () => {\n    if (cleanup) {\n      cleanup()\n      cleanup = undefined\n    }\n  },\n})\n\nconst computedMenuClasses = computed(() => [\n  {\n    show: isVisible.value,\n    fade: !computedNoAnimation.value,\n  },\n])\n\nonKeyStroke(\n  'Escape',\n  () => {\n    hide()\n    getElement(referenceElement.value)?.focus()\n  },\n  {target: referenceElement}\n)\nonKeyStroke(\n  'Escape',\n  () => {\n    hide()\n    getElement(referenceElement.value)?.focus()\n  },\n  {target: floatingElement}\n)\n\nconst keynav = (e: Readonly<Event>, v: number) => {\n  if (floatingElement.value?.contains((e.target as HTMLElement)?.closest('form'))) return\n  if (/input|select|option|textarea|form/i.test((e.target as HTMLElement)?.tagName)) return\n  e.preventDefault()\n  if (!showRef.value) {\n    show()\n    const loop = setInterval(() => {\n      if (isVisible.value) {\n        clearInterval(loop)\n        nextTick(() => keynav(e, v))\n      }\n    }, 16)\n    return\n  }\n  const list = floatingElement.value?.querySelectorAll(\n    '.dropdown-item:not(.disabled):not(:disabled)'\n  )\n  if (!list) return\n  if (floatingElement.value?.contains(document.activeElement)) {\n    const active = floatingElement.value.querySelector('.dropdown-item:focus')\n    const index = Array.prototype.indexOf.call(list, active) + v\n    if (index >= 0 && index < list?.length) (list[index] as HTMLElement)?.focus()\n  } else {\n    ;(list[v === -1 ? list.length - 1 : 0] as HTMLElement)?.focus()\n  }\n}\n\nonKeyStroke('ArrowUp', (e) => keynav(e, -1), {target: referenceElement})\nonKeyStroke('ArrowDown', (e) => keynav(e, 1), {target: referenceElement})\nonKeyStroke('ArrowUp', (e) => keynav(e, -1), {target: floatingElement})\nonKeyStroke('ArrowDown', (e) => keynav(e, 1), {target: floatingElement})\n\nconst sizeStyles = ref<CSSProperties>({})\nconst floatingMiddleware = computed<Middleware[]>(() => {\n  if (props.floatingMiddleware !== undefined) {\n    return props.floatingMiddleware\n  }\n  const localOffset =\n    typeof props.offset === 'string' || typeof props.offset === 'number'\n      ? offsetToNumber.value\n      : props.offset\n  const arr: Middleware[] = [offsetMiddleware(localOffset)]\n  if (props.noFlip === false) {\n    arr.push(\n      flip({\n        boundary: boundary.value,\n        rootBoundary: rootBoundary.value,\n        padding: props.boundaryPadding,\n      })\n    )\n  }\n  if (props.noShift === false) {\n    arr.push(\n      shift({\n        boundary: boundary.value,\n        rootBoundary: rootBoundary.value,\n        padding: props.boundaryPadding,\n      })\n    )\n  }\n  if (props.noSize === false) {\n    arr.push(\n      sizeMiddleware({\n        boundary: boundary.value,\n        rootBoundary: rootBoundary.value,\n        padding: props.boundaryPadding,\n        apply({availableWidth, availableHeight}) {\n          sizeStyles.value = {\n            maxHeight:\n              availableHeight >= (floatingElement.value?.scrollHeight ?? 0)\n                ? undefined\n                : availableHeight\n                  ? `${Math.max(0, availableHeight)}px`\n                  : undefined,\n            maxWidth:\n              availableWidth >= (floatingElement.value?.scrollWidth ?? 0)\n                ? undefined\n                : availableWidth\n                  ? `${Math.max(0, availableWidth)}px`\n                  : undefined,\n          }\n        },\n      })\n    )\n  }\n  return arr\n})\nconst {update, floatingStyles} = useFloating(referenceElement, floatingElement, {\n  placement: () => props.placement,\n  middleware: floatingMiddleware,\n  strategy: toRef(() => props.strategy),\n})\n\nconst inButtonGroupAttributes = inButtonGroup\n  ? {\n      class: 'btn-group',\n      role: 'group',\n    }\n  : undefined\n\nconst computedClasses = computed(() => [\n  inButtonGroupAttributes?.class,\n  props.wrapperClass,\n  {\n    'btn-group': !props.wrapperClass && props.split,\n    [`drop${resolveBootstrapCaret(props.placement)}`]: !props.wrapperClass,\n    'position-static': props.boundary !== 'clippingAncestors' && !props.isNav,\n  },\n])\n\nconst buttonClasses = computed(() => [\n  props.split ? props.splitClass : props.toggleClass,\n  {\n    'nav-link': props.isNav,\n    'dropdown-toggle': !props.split,\n    'dropdown-toggle-no-caret': props.noCaret && !props.split,\n    'show': props.split ? undefined : showRef.value,\n  },\n])\n\nconst onButtonClick = () => {\n  toggle()\n}\n\nconst onSplitClick = (event: Readonly<MouseEvent>) => {\n  if (props.split) {\n    emit('split-click', event)\n    return\n  }\n  onButtonClick()\n}\n\nonClickOutside(\n  floatingElement,\n  () => {\n    if (showRef.value && (props.autoClose === true || props.autoClose === 'outside')) {\n      hide()\n    }\n  },\n  {ignore: [button, splitButton]}\n)\nconst onClickInside = () => {\n  if (showRef.value && (props.autoClose === true || props.autoClose === 'inside')) {\n    hide()\n  }\n}\n\nwatch(isVisible, () => {\n  update()\n})\n\ndefineExpose({\n  hide,\n  show,\n  toggle,\n})\n\nprovide(dropdownInjectionKey, {\n  id: computedId,\n  show,\n  hide,\n  toggle,\n  visible: toRef(() => showRef.value),\n  isNav: toRef(() => props.isNav),\n})\n</script>\n"],"names":["_props","__props","props","useDefaults","emit","__emit","computedId","useId","id","modelValue","_useModel","inInputGroup","inject","inputGroupKey","inButtonGroup","buttonGroupKey","computedOffset","computed","offset","NaN","offsetToNumber","useToNumber","floatingElement","useTemplateRef","button","splitButton","boundary","isBoundary","rootBoundary","isRootBoundary","referenceElement","split","value","cleanup","showRef","renderRef","hide","show","toggle","computedNoAnimation","transitionProps","contentShowing","isVisible","useShowHide","showFn","update","nextTick","autoUpdate","animationFrame","hideFn","computedMenuClasses","fade","index$1","onKeyStroke","getElement","_a","focus","target","keynav","e","v","_b","contains","closest","test","_c","tagName","preventDefault","loop","setInterval","clearInterval","list","_d","querySelectorAll","_e","document","activeElement","active","querySelector","index","Array","prototype","indexOf","call","length","_f","_g","sizeStyles","ref","floatingMiddleware","localOffset","arr","offsetMiddleware","noFlip","push","flip","padding","boundaryPadding","noShift","shift","noSize","sizeMiddleware","apply","availableWidth","availableHeight","maxHeight","scrollHeight","Math","max","maxWidth","scrollWidth","floatingStyles","useFloating","placement","middleware","strategy","toRef","inButtonGroupAttributes","class","role","computedClasses","wrapperClass","resolveBootstrapCaret","isNav","buttonClasses","splitClass","toggleClass","noCaret","onButtonClick","onSplitClick","event","onClickOutside","autoClose","ignore","onClickInside","vue","watch","__expose","provide","dropdownInjectionKey","visible"],"mappings":"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"}