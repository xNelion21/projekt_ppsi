{"version":3,"file":"index.umd.js","sources":["../../../../src/plugins/popoverController/index.ts"],"sourcesContent":["import {\n  isReadonly,\n  isRef,\n  markRaw,\n  nextTick,\n  onScopeDispose,\n  type Plugin,\n  ref,\n  type Ref,\n  toRef,\n  toValue,\n  watch,\n  type WatchHandle,\n} from 'vue'\nimport {popoverPluginKey} from '../../utils/keys'\nimport type {\n  ControllerKey,\n  PopoverOrchestratorCreateParam,\n  PopoverOrchestratorMapValue,\n  PopoverOrchestratorParam,\n  PromiseWithPopover,\n  PromiseWithPopoverInternal,\n  TooltipOrchestratorCreateParam,\n  TooltipOrchestratorMapValue,\n  TooltipOrchestratorParam,\n} from '../../types/ComponentOrchestratorTypes'\nimport type {BvTriggerableEvent} from '../../utils'\n\nexport const popoverPlugin: Plugin = {\n  install(app) {\n    const _isOrchestratorInstalled = ref(false)\n    const popovers = ref(\n      new Map<ControllerKey, PopoverOrchestratorMapValue | TooltipOrchestratorMapValue>()\n    )\n\n    const buildPromise = (\n      _id: ControllerKey,\n      store: Ref<Map<ControllerKey, PopoverOrchestratorMapValue | TooltipOrchestratorMapValue>>\n    ): {\n      value: PromiseWithPopover\n      resolve: (value: BvTriggerableEvent) => void\n      stop?: WatchHandle\n    } => {\n      let resolveFunc: (value: BvTriggerableEvent) => void = () => {}\n\n      const promise = new Promise<BvTriggerableEvent>((resolve) => {\n        resolveFunc = resolve\n      }) as PromiseWithPopover\n      Object.assign(promise, {\n        id: _id,\n        ref: null,\n        show() {\n          if (!this.ref) return this.set({modelValue: true})\n          this.ref.show()\n          return promise\n        },\n        hide(trigger?: string) {\n          if (!this.ref) return this.set({modelValue: false})\n          this.ref.hide(trigger, true)\n          return promise\n        },\n        toggle() {\n          if (!this.ref) return this.set({modelValue: !this.get()?.modelValue})\n          this.ref.toggle()\n          return promise\n        },\n        get() {\n          return store.value.get(_id)\n        },\n        set(val: Partial<PopoverOrchestratorParam | TooltipOrchestratorParam>) {\n          const item = store.value.get(_id)\n          if (item) {\n            const v = {...toValue(item), ...toValue(val)}\n            // add modal to v\n            if (item.modelValue !== v.modelValue) {\n              item['onUpdate:modelValue']?.(v.modelValue as boolean)\n            }\n            store.value.set(_id, {\n              ...v,\n              title: toValue(v.title),\n              body: toValue(v.body),\n              modelValue: toValue(v.modelValue),\n            })\n          }\n          return promise\n        },\n        async destroy() {\n          const item = store.value.get(_id)\n          if (!item) return\n          item.promise.stop?.()\n          if (item.modelValue) {\n            await new Promise((resolve) => {\n              item.modelValue = false\n              const prev = item['onHidden']\n              item['onHidden'] = (e) => {\n                prev?.(e)\n                resolve(e)\n              }\n              nextTick(() => {\n                item['onUpdate:modelValue']?.(false)\n              })\n            })\n          }\n          store.value.delete(_id)\n        },\n\n        async [Symbol.asyncDispose]() {\n          await this.destroy()\n        },\n      } as PromiseWithPopoverInternal)\n\n      return {\n        value: promise,\n        resolve: resolveFunc,\n      }\n    }\n\n    /**\n     * Create a popover or tooltip\n     * @param obj The popover or tooltip props\n     * @param tooltip If true, create a tooltip, otherwise create a popover\n     * @returns {PromiseWithPopover} A promise object with methods to control the popover (show, hide, toggle, get, set, destroy)\n     */\n    const create = (obj: PopoverOrchestratorCreateParam, tooltip?: boolean): PromiseWithPopover => {\n      if (!_isOrchestratorInstalled.value) {\n        throw new Error(\n          'The BPopoverOrchestrator component must be mounted to use the popover controller'\n        )\n      }\n      const {component, slots} = toValue(obj)\n      if (component) {\n        if (isRef(obj)) obj.value.component = markRaw(component)\n        else if (typeof obj === 'object') obj.component = markRaw(component)\n      }\n      if (slots) {\n        if (isRef(obj)) obj.value.slots = markRaw(slots)\n        else if (typeof obj === 'object') obj.slots = markRaw(slots)\n      }\n      const resolvedProps = toRef(obj)\n      const _self = resolvedProps.value?.id || Symbol('Popover controller')\n\n      const promise = buildPromise(_self, popovers)\n\n      promise.stop = watch(\n        resolvedProps,\n        (_newValue) => {\n          const newValue = {...toValue(_newValue)}\n          const previous = popovers.value.get(_self)\n          // if (!previous) return\n          const v: Partial<PopoverOrchestratorMapValue> = {\n            ...(previous || {}),\n          }\n\n          for (const key in newValue) {\n            if (key.startsWith('on')) {\n              v[key as keyof PopoverOrchestratorCreateParam] =\n                newValue[key as keyof PopoverOrchestratorCreateParam]\n            } else {\n              v[key as keyof PopoverOrchestratorCreateParam] = toValue(\n                newValue[key as keyof PopoverOrchestratorCreateParam]\n              )\n            }\n          }\n          popovers.value.set(_self, {\n            ...v,\n            ...(v.modelValue === undefined && {modelValue: false}),\n            'onUpdate:modelValue': (val: boolean) => {\n              newValue['onUpdate:modelValue']?.(val)\n              const {modelValue} = toValue(obj)\n              if (isRef(obj) && !isRef(modelValue)) obj.value.modelValue = val\n              if (isRef(modelValue) && !isReadonly(modelValue)) {\n                ;(modelValue as Ref<PopoverOrchestratorParam['modelValue']>).value = val\n              }\n              if (v.modelValue !== val) {\n                const popover = popovers.value.get(_self)\n                if (popover) {\n                  popover.modelValue = val\n                }\n              }\n            },\n            tooltip,\n            promise,\n          })\n        },\n        {\n          immediate: true,\n          deep: true,\n        }\n      )\n\n      onScopeDispose(() => {\n        const popover = popovers.value.get(_self)\n        if (popover) {\n          popover.promise.value.destroy?.()\n        }\n      }, true)\n\n      return promise.value\n    }\n\n    const tooltip = (obj: TooltipOrchestratorCreateParam): PromiseWithPopover => create(obj, true)\n\n    const popover = (obj: PopoverOrchestratorCreateParam): PromiseWithPopover => create(obj, false)\n\n    app.provide(popoverPluginKey, {\n      _isOrchestratorInstalled,\n      popovers,\n      tooltip,\n      popover,\n    })\n  },\n}\n"],"names":["popoverPlugin","install","app","_isOrchestratorInstalled","ref","popovers","Map","buildPromise","_id","store","resolveFunc","promise","Promise","resolve","Object","assign","id","show","this","set","modelValue","hide","trigger","toggle","_a","get","value","val","item","v","toValue","title","body","destroy","_b","stop","call","prev","e","nextTick","delete","Symbol","asyncDispose","create","obj","tooltip","Error","component","slots","isRef","markRaw","resolvedProps","toRef","_self","watch","_newValue","newValue","key","startsWith","isReadonly","popover","immediate","deep","onScopeDispose","provide","popoverPluginKey"],"mappings":"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"}