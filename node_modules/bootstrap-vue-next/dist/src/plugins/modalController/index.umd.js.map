{"version":3,"file":"index.umd.js","sources":["../../../../src/plugins/modalController/index.ts"],"sourcesContent":["import {\n  isReadonly,\n  isRef,\n  markRaw,\n  nextTick,\n  onScopeDispose,\n  type Plugin,\n  ref,\n  type Ref,\n  toRef,\n  toValue,\n  watch,\n  type WatchHandle,\n} from 'vue'\nimport {modalControllerPluginKey} from '../../utils/keys'\nimport type {\n  ControllerKey,\n  ModalOrchestratorCreateOptions,\n  ModalOrchestratorCreateParam,\n  ModalOrchestratorMapValue,\n  ModalOrchestratorParam,\n  PromiseWithModal,\n  PromiseWithModalBoolean,\n  PromiseWithModalInternal,\n} from '../../types/ComponentOrchestratorTypes'\nimport type {BvTriggerableEvent} from 'src/utils'\n\nexport const modalControllerPlugin: Plugin = {\n  install(app) {\n    const modals = ref(new Map<ControllerKey, ModalOrchestratorMapValue>())\n\n    const _isOrchestratorInstalled = ref(false)\n\n    const buildPromise = (\n      _id: ControllerKey\n    ): {\n      value: PromiseWithModal | PromiseWithModalBoolean\n      resolve: (value: BvTriggerableEvent | boolean | null) => void\n      stop?: WatchHandle\n    } => {\n      let resolveFunc: (value: BvTriggerableEvent | boolean | null) => void = () => {}\n\n      const promise = new Promise<BvTriggerableEvent | boolean | null>((resolve) => {\n        resolveFunc = resolve\n      }) as PromiseWithModal | PromiseWithModalBoolean\n      Object.assign(promise, {\n        id: _id,\n        ref: null,\n        show() {\n          if (!this.ref) return this.set({modelValue: true})\n          this.ref.show()\n          return promise\n        },\n        hide(trigger?: string) {\n          if (!this.ref) return this.set({modelValue: false})\n          this.ref.hide(trigger, true)\n          return promise\n        },\n        toggle() {\n          if (!this.ref) return this.set({modelValue: !this.get()?.modelValue})\n          this.ref.toggle()\n          return promise\n        },\n        get() {\n          return modals.value.get(_id)\n        },\n        set(val: Partial<ModalOrchestratorParam>) {\n          const modal = modals.value.get(_id)\n          if (modal) {\n            const v = {...toValue(modal), ...toValue(val)}\n            // add modal to v\n            if (modal.modelValue !== v.modelValue) {\n              modal['onUpdate:modelValue']?.(v.modelValue as boolean)\n            }\n            modals.value.set(_id, {\n              ...v,\n              title: toValue(v.title),\n              body: toValue(v.body),\n              modelValue: toValue(v.modelValue),\n            })\n          }\n          return promise\n        },\n        async destroy() {\n          const modal = modals.value.get(_id)\n          if (!modal) return\n          modal.promise.stop?.()\n          if (modal.modelValue) {\n            await new Promise((resolve) => {\n              modal.modelValue = false\n              const prev = modal['onHidden']\n              modal['onHidden'] = (e) => {\n                prev?.(e)\n                resolve(e)\n              }\n              nextTick(() => {\n                modal['onUpdate:modelValue']?.(false)\n              })\n            })\n          }\n          modals.value.delete(_id)\n        },\n\n        async [Symbol.asyncDispose]() {\n          await this.destroy()\n        },\n      } as PromiseWithModalInternal)\n\n      return {\n        value: promise,\n        resolve: resolveFunc,\n      }\n    }\n\n    /**\n     * @returns {PromiseWithModal}  Returns a promise object with methods to control the modal (show, hide, toggle, get, set, destroy)\n     */\n    const create = (\n      obj: ModalOrchestratorCreateParam = {},\n      options: ModalOrchestratorCreateOptions = {}\n    ): PromiseWithModal | PromiseWithModalBoolean => {\n      if (!_isOrchestratorInstalled.value) {\n        throw new Error(\n          'The BModalOrchestrator component must be mounted to use the modal controller'\n        )\n      }\n\n      const {component, slots} = toValue(obj)\n      if (component) {\n        if (isRef(obj)) obj.value.component = markRaw(component)\n        else if (typeof obj === 'object') obj.component = markRaw(component)\n      }\n      if (slots) {\n        if (isRef(obj)) obj.value.slots = markRaw(slots)\n        else if (typeof obj === 'object') obj.slots = markRaw(slots)\n      }\n      const resolvedProps = toRef(obj)\n      const _self = resolvedProps.value?.id || Symbol('Modals controller')\n\n      const promise = buildPromise(_self)\n\n      promise.stop = watch(\n        resolvedProps,\n        (_newValue) => {\n          const newValue = {...toValue(_newValue)}\n          const previous = modals.value.get(_self)\n          // if (!previous) return\n          const v = {\n            ...(previous || {}),\n          }\n\n          if (newValue.props) {\n            Object.assign(v, newValue.props)\n            newValue.props = undefined\n          }\n          for (const key in newValue) {\n            if (key.startsWith('on')) {\n              v[key as keyof ModalOrchestratorCreateParam] =\n                newValue[key as keyof ModalOrchestratorCreateParam]\n            } else {\n              v[key as keyof ModalOrchestratorCreateParam] = toValue(\n                newValue[key as keyof ModalOrchestratorCreateParam]\n              )\n            }\n          }\n          modals.value.set(_self, {\n            ...v,\n            ...(v.modelValue === undefined && {modelValue: true}),\n            'onUpdate:modelValue': (val: boolean) => {\n              newValue['onUpdate:modelValue']?.(val)\n              const {modelValue} = toValue(obj)\n              if (isRef(obj) && !isRef(modelValue)) obj.value.modelValue = val\n              if (isRef(modelValue) && !isReadonly(modelValue)) {\n                ;(modelValue as Ref<ModalOrchestratorMapValue['modelValue']>).value = val\n              }\n              const modal = modals.value.get(_self)\n              if (modal) {\n                modals.value.set(_self, {\n                  ...modal,\n                  modelValue: val,\n                })\n              }\n            },\n            options,\n            promise,\n          })\n        },\n        {\n          immediate: true,\n          deep: true,\n        }\n      )\n      onScopeDispose(() => {\n        const modal = modals.value.get(_self)\n        if (modal) {\n          modal.promise.value.destroy?.()\n        }\n      }, true)\n      return promise.value\n    }\n\n    /*\n     * @deprecated use create({}).show() instead\n     */\n    const show = (obj: ModalOrchestratorCreateParam = {}): PromiseWithModalBoolean => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[BootstrapVueNext] useModalController: The show() method is deprecated. Use create({}).show() instead.'\n      )\n      return create(obj, {returnBoolean: true}).show() as PromiseWithModalBoolean\n    }\n    /*\n     * @deprecated use create({}).show() instead\n     */\n    const confirm = (obj: ModalOrchestratorCreateParam = {}): PromiseWithModalBoolean => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[BootstrapVueNext] useModalController: The confirm() method is deprecated. Use create({}).show() instead.'\n      )\n      return create(obj, {returnBoolean: true}).show() as PromiseWithModalBoolean\n    }\n\n    app.provide(modalControllerPluginKey, {\n      _isOrchestratorInstalled,\n      create,\n      modals,\n      show,\n      confirm,\n    })\n  },\n}\n"],"names":["modalControllerPlugin","install","app","modals","ref","Map","_isOrchestratorInstalled","buildPromise","_id","resolveFunc","promise","Promise","resolve","Object","assign","id","show","this","set","modelValue","hide","trigger","toggle","_a","get","value","val","modal","v","toValue","title","body","destroy","_b","stop","call","prev","e","nextTick","delete","Symbol","asyncDispose","create","obj","options","Error","component","slots","isRef","markRaw","resolvedProps","toRef","_self","watch","_newValue","newValue","props","key","startsWith","isReadonly","immediate","deep","onScopeDispose","provide","modalControllerPluginKey","console","warn","returnBoolean","confirm"],"mappings":"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"}