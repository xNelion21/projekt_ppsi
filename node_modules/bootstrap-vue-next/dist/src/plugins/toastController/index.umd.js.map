{"version":3,"file":"index.umd.js","sources":["../../../../src/plugins/toastController/index.ts"],"sourcesContent":["import {\n  isReadonly,\n  isRef,\n  markRaw,\n  nextTick,\n  onScopeDispose,\n  type Plugin,\n  ref,\n  type Ref,\n  toRef,\n  toValue,\n  watch,\n  type WatchHandle,\n} from 'vue'\nimport {toastPluginKey} from '../../utils/keys'\nimport type {ContainerPosition} from '../../types/Alignment'\nimport type {\n  ControllerKey,\n  PromiseWithToast,\n  PromiseWithToastInternal,\n  ToastOrchestratorArrayValue,\n  ToastOrchestratorCreateOptions,\n  ToastOrchestratorCreateParam,\n  ToastOrchestratorParam,\n} from '../../types/ComponentOrchestratorTypes'\nimport type {BvTriggerableEvent} from '../../utils'\n\nconst posDefault: ContainerPosition = 'top-end'\n\nexport const toastPlugin: Plugin = {\n  install(app) {\n    const toasts = ref<ToastOrchestratorArrayValue[]>([])\n\n    const _isAppend = ref(false)\n\n    const buildPromise = (\n      _id: ControllerKey\n    ): {\n      value: PromiseWithToast\n      resolve: (value: BvTriggerableEvent) => void\n      stop?: WatchHandle\n    } => {\n      let resolveFunc: (value: BvTriggerableEvent) => void = () => {}\n\n      const promise = new Promise<BvTriggerableEvent>((resolve) => {\n        resolveFunc = resolve\n      }) as PromiseWithToast\n      Object.assign(promise, {\n        id: _id,\n        ref: null,\n        show() {\n          if (!this.ref) return this.set({modelValue: true})\n          this.ref.show()\n          return promise\n        },\n        hide(trigger?: string) {\n          if (!this.ref) return this.set({modelValue: false})\n          this.ref.hide(trigger, true)\n          return promise\n        },\n        toggle() {\n          if (!this.ref) return this.set({modelValue: !this.get()?.modelValue})\n          this.ref.toggle()\n          return promise\n        },\n        get() {\n          return toasts.value.find((el) => el._self === _id)\n        },\n        set(val: Partial<ToastOrchestratorParam>) {\n          const toastIndex = toasts.value.findIndex((el) => el._self === _id)\n          const toast = toasts.value[toastIndex]\n          if (toast) {\n            const v = {...toValue(toast), ...toValue(val)}\n            if (toast.modelValue !== v.modelValue) {\n              toast['onUpdate:modelValue']?.(v.modelValue as boolean)\n            }\n            toasts.value.splice(toastIndex, 1, {\n              ...v,\n              title: toValue(v.title),\n              body: toValue(v.body),\n              modelValue: toValue(v.modelValue),\n            })\n          }\n          return promise\n        },\n        async destroy() {\n          const toast = toasts.value.find((el) => el._self === _id)\n          if (!toast) return\n          toast.promise.stop?.()\n          if (toast.modelValue) {\n            await new Promise((resolve) => {\n              toast.modelValue = false\n              const prev = toast['onHidden']\n              toast['onHidden'] = (e) => {\n                prev?.(e)\n                resolve(e)\n              }\n              nextTick(() => {\n                toast['onUpdate:modelValue']?.(false)\n              })\n            })\n          }\n          toasts.value.splice(\n            toasts.value.findIndex((el) => el._self === _id),\n            1\n          )\n        },\n        async [Symbol.asyncDispose]() {\n          await this.destroy()\n        },\n      } as PromiseWithToastInternal)\n\n      return {\n        value: promise,\n        resolve: resolveFunc,\n      }\n    }\n\n    /**\n     * @returns {PromiseWithToast} Returns a promise object with methods to control the toast (show, hide, toggle, get, set, destroy)\n     */\n    const create = (\n      obj: ToastOrchestratorCreateParam = {},\n      options: ToastOrchestratorCreateOptions = {}\n    ): PromiseWithToast => {\n      const {component, slots} = toValue(obj)\n      if (component) {\n        if (isRef(obj)) obj.value.component = markRaw(component)\n        else if (typeof obj === 'object') obj.component = markRaw(component)\n      }\n      if (slots) {\n        if (isRef(obj)) obj.value.slots = markRaw(slots)\n        else if (typeof obj === 'object') obj.slots = markRaw(slots)\n      }\n      const resolvedProps = toRef(obj)\n\n      const _self = resolvedProps.value?.id || Symbol('Toast controller')\n      const promise = buildPromise(_self)\n\n      promise.stop = watch(\n        resolvedProps,\n        (_newValue) => {\n          const newValue = {...toValue(_newValue)}\n          const previousIndex = toasts.value.findIndex((el) => el._self === _self)\n          const previous = previousIndex === -1 ? {} : toasts.value[previousIndex]\n          const v: ToastOrchestratorArrayValue = {\n            _self,\n            ...(previous || {}),\n            promise,\n            options,\n          }\n          if (newValue.props) {\n            Object.assign(v, newValue.props)\n            newValue.props = undefined\n          }\n          if (newValue.pos) {\n            v.position = newValue.pos\n            newValue.pos = undefined\n          }\n          for (const key in newValue) {\n            if (key.startsWith('on')) {\n              v[key as keyof ToastOrchestratorCreateParam] =\n                newValue[key as keyof ToastOrchestratorCreateParam]\n            } else {\n              v[key as keyof ToastOrchestratorCreateParam] = toValue(\n                newValue[key as keyof ToastOrchestratorCreateParam]\n              )\n            }\n          }\n          v.position = v.position || posDefault\n          v.modelValue = v.modelValue ?? 5000\n          v['onUpdate:modelValue'] = (val: boolean) => {\n            newValue['onUpdate:modelValue']?.(val)\n            const {modelValue} = toValue(obj)\n            if (isRef(obj) && !isRef(modelValue)) obj.value.modelValue = val\n            if (isRef(modelValue) && !isReadonly(modelValue)) {\n              ;(modelValue as Ref<ToastOrchestratorArrayValue['modelValue']>).value = val\n            }\n            if (v.modelValue !== val) {\n              const toast = toasts.value.find((el) => el._self === _self)\n              if (toast) {\n                toast.modelValue = val\n              }\n            }\n          }\n          if (previousIndex === -1) {\n            if (\n              resolvedProps.value?.appendToast !== undefined\n                ? resolvedProps.value.appendToast\n                : _isAppend.value\n            ) {\n              toasts.value.push(v)\n            } else {\n              toasts.value.unshift(v)\n            }\n          } else {\n            toasts.value.splice(previousIndex, 1, v)\n          }\n        },\n        {\n          deep: true,\n          immediate: true,\n        }\n      )\n      onScopeDispose(() => {\n        const toast = toasts.value.find((el) => el._self === _self)\n        if (toast) {\n          toast.promise.value.destroy?.()\n        }\n      }, true)\n      return promise.value\n    }\n\n    /*\n     * @deprecated The `show` method is deprecated. Use the `create` method instead.\n     */\n    const show = (obj: ToastOrchestratorCreateParam = {}): PromiseWithToast => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[BootstrapVueNext] useToastController: The `show` method is deprecated. Use the `create` method instead.'\n      )\n      return create(obj).show()\n    }\n\n    app.provide(toastPluginKey, {\n      _isAppend,\n      _isOrchestratorInstalled: ref(false),\n      toasts,\n      create,\n      show,\n    })\n  },\n}\n"],"names":["toastPlugin","install","app","toasts","ref","_isAppend","buildPromise","_id","resolveFunc","promise","Promise","resolve","Object","assign","id","show","this","set","modelValue","hide","trigger","toggle","_a","get","value","find","el","_self","val","toastIndex","findIndex","toast","v","toValue","splice","title","body","destroy","_b","stop","call","prev","e","nextTick","Symbol","asyncDispose","create","obj","options","component","slots","isRef","markRaw","resolvedProps","toRef","watch","_newValue","newValue","previousIndex","previous","props","pos","position","key","startsWith","isReadonly","appendToast","push","unshift","deep","immediate","onScopeDispose","provide","toastPluginKey","_isOrchestratorInstalled","console","warn"],"mappings":"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"}